!function(window,angular){"use strict";var isArray,isObject,isDefined,noop,isEagerInstantiationEnabled,ngRouteModule=angular.module("ngRoute",[]).info({angularVersion:"1.6.4"}).provider("$route",function(){function inherit(parent,extra){return angular.extend(Object.create(parent),extra)}isArray=angular.isArray,isObject=angular.isObject,isDefined=angular.isDefined,noop=angular.noop;var routes={};function pathRegExp(path,opts){var insensitive=opts.caseInsensitiveMatch,ret={originalPath:path,regexp:path},keys=ret.keys=[];return path=path.replace(/([().])/g,"\\$1").replace(/(\/)?:(\w+)(\*\?|[?*])?/g,function(_,slash,key,option){var optional="?"===option||"*?"===option?"?":null,star="*"===option||"*?"===option?"*":null;return keys.push({name:key,optional:!!optional}),slash=slash||"",(optional?"":slash)+"(?:"+(optional?slash:"")+(star?"(.+?)":"([^/]+)")+(optional||"")+")"+(optional||"")}).replace(/([\/$*])/g,"\\$1"),ret.regexp=new RegExp("^"+path+"$",insensitive?"i":""),ret}this.when=function(path,route){var routeCopy=function(src,dst){if(isArray(src)){dst=dst||[];for(var i=0,ii=src.length;i<ii;i++)dst[i]=src[i]}else if(isObject(src))for(var key in dst=dst||{},src)"$"===key.charAt(0)&&"$"===key.charAt(1)||(dst[key]=src[key]);return dst||src}(route);if(angular.isUndefined(routeCopy.reloadOnSearch)&&(routeCopy.reloadOnSearch=!0),angular.isUndefined(routeCopy.caseInsensitiveMatch)&&(routeCopy.caseInsensitiveMatch=this.caseInsensitiveMatch),routes[path]=angular.extend(routeCopy,path&&pathRegExp(path,routeCopy)),path){var redirectPath="/"===path[path.length-1]?path.substr(0,path.length-1):path+"/";routes[redirectPath]=angular.extend({redirectTo:path},pathRegExp(redirectPath,routeCopy))}return this},this.caseInsensitiveMatch=!1,this.otherwise=function(params){return"string"==typeof params&&(params={redirectTo:params}),this.when(null,params),this},isEagerInstantiationEnabled=!0,this.eagerInstantiationEnabled=function(enabled){return isDefined(enabled)?(isEagerInstantiationEnabled=enabled,this):isEagerInstantiationEnabled},this.$get=["$rootScope","$location","$routeParams","$q","$injector","$templateRequest","$sce","$browser",function($rootScope,$location,$routeParams,$q,$injector,$templateRequest,$sce,$browser){var preparedRoute,preparedRouteIsUpdateOnly,forceReload=!1,$route={routes:routes,reload:function(){forceReload=!0;var fakeLocationEvent={defaultPrevented:!1,preventDefault:function(){this.defaultPrevented=!0,forceReload=!1}};$rootScope.$evalAsync(function(){prepareRoute(fakeLocationEvent),fakeLocationEvent.defaultPrevented||commitRoute()})},updateParams:function(newParams){if(!this.current||!this.current.$$route)throw $routeMinErr("norout","Tried updating route when with no current route");newParams=angular.extend({},this.current.params,newParams),$location.path(interpolate(this.current.$$route.originalPath,newParams)),$location.search(newParams)}};return $rootScope.$on("$locationChangeStart",prepareRoute),$rootScope.$on("$locationChangeSuccess",commitRoute),$route;function prepareRoute($locationEvent){var params,match,lastRoute=$route.current;angular.forEach(routes,function(route,path){!match&&(params=function(on,route){var keys=route.keys,params={};if(!route.regexp)return null;var m=route.regexp.exec(on);if(!m)return null;for(var i=1,len=m.length;i<len;++i){var key=keys[i-1],val=m[i];key&&val&&(params[key.name]=val)}return params}($location.path(),route))&&((match=inherit(route,{params:angular.extend({},$location.search(),params),pathParams:params})).$$route=route)}),preparedRoute=match||routes.null&&inherit(routes.null,{params:{},pathParams:{}}),(preparedRouteIsUpdateOnly=preparedRoute&&lastRoute&&preparedRoute.$$route===lastRoute.$$route&&angular.equals(preparedRoute.pathParams,lastRoute.pathParams)&&!preparedRoute.reloadOnSearch&&!forceReload)||!lastRoute&&!preparedRoute||$rootScope.$broadcast("$routeChangeStart",preparedRoute,lastRoute).defaultPrevented&&$locationEvent&&$locationEvent.preventDefault()}function commitRoute(){var lastRoute=$route.current,nextRoute=preparedRoute;if(preparedRouteIsUpdateOnly)lastRoute.params=nextRoute.params,angular.copy(lastRoute.params,$routeParams),$rootScope.$broadcast("$routeUpdate",lastRoute);else if(nextRoute||lastRoute){forceReload=!1,$route.current=nextRoute;var nextRoutePromise=$q.resolve(nextRoute);$browser.$$incOutstandingRequestCount(),nextRoutePromise.then(getRedirectionData).then(handlePossibleRedirection).then(function(keepProcessingRoute){return keepProcessingRoute&&nextRoutePromise.then(resolveLocals).then(function(locals){nextRoute===$route.current&&(nextRoute&&(nextRoute.locals=locals,angular.copy(nextRoute.params,$routeParams)),$rootScope.$broadcast("$routeChangeSuccess",nextRoute,lastRoute))})}).catch(function(error){nextRoute===$route.current&&$rootScope.$broadcast("$routeChangeError",nextRoute,lastRoute,error)}).finally(function(){$browser.$$completeOutstandingRequest(noop)})}}function getRedirectionData(route){var data={route:route,hasRedirection:!1};if(route)if(route.redirectTo)if(angular.isString(route.redirectTo))data.path=interpolate(route.redirectTo,route.params),data.search=route.params,data.hasRedirection=!0;else{var oldPath=$location.path(),oldSearch=$location.search(),newUrl=route.redirectTo(route.pathParams,oldPath,oldSearch);angular.isDefined(newUrl)&&(data.url=newUrl,data.hasRedirection=!0)}else if(route.resolveRedirectTo)return $q.resolve($injector.invoke(route.resolveRedirectTo)).then(function(newUrl){return angular.isDefined(newUrl)&&(data.url=newUrl,data.hasRedirection=!0),data});return data}function handlePossibleRedirection(data){var keepProcessingRoute=!0;if(data.route!==$route.current)keepProcessingRoute=!1;else if(data.hasRedirection){var oldUrl=$location.url(),newUrl=data.url;newUrl?$location.url(newUrl).replace():newUrl=$location.path(data.path).search(data.search).replace().url(),newUrl!==oldUrl&&(keepProcessingRoute=!1)}return keepProcessingRoute}function resolveLocals(route){if(route){var locals=angular.extend({},route.resolve);angular.forEach(locals,function(value,key){locals[key]=angular.isString(value)?$injector.get(value):$injector.invoke(value,null,null,key)});var template=function(route){var template,templateUrl;angular.isDefined(template=route.template)?angular.isFunction(template)&&(template=template(route.params)):angular.isDefined(templateUrl=route.templateUrl)&&(angular.isFunction(templateUrl)&&(templateUrl=templateUrl(route.params)),angular.isDefined(templateUrl)&&(route.loadedTemplateUrl=$sce.valueOf(templateUrl),template=$templateRequest(templateUrl)));return template}(route);return angular.isDefined(template)&&(locals.$template=template),$q.all(locals)}}function interpolate(string,params){var result=[];return angular.forEach((string||"").split(":"),function(segment,i){if(0===i)result.push(segment);else{var segmentMatch=segment.match(/(\w+)(?:[?*])?(.*)/),key=segmentMatch[1];result.push(params[key]),result.push(segmentMatch[2]||""),delete params[key]}}),result.join("")}}]}).run(instantiateRoute),$routeMinErr=angular.$$minErr("ngRoute");function instantiateRoute($injector){isEagerInstantiationEnabled&&$injector.get("$route")}function ngViewFactory($route,$anchorScroll,$animate){return{restrict:"ECA",terminal:!0,priority:400,transclude:"element",link:function(scope,$element,attr,ctrl,$transclude){var currentScope,currentElement,previousLeaveAnimation,autoScrollExp=attr.autoscroll,onloadExp=attr.onload||"";function cleanupLastView(){previousLeaveAnimation&&($animate.cancel(previousLeaveAnimation),previousLeaveAnimation=null),currentScope&&(currentScope.$destroy(),currentScope=null),currentElement&&((previousLeaveAnimation=$animate.leave(currentElement)).done(function(response){!1!==response&&(previousLeaveAnimation=null)}),currentElement=null)}function update(){var locals=$route.current&&$route.current.locals,template=locals&&locals.$template;if(angular.isDefined(template)){var newScope=scope.$new(),current=$route.current,clone=$transclude(newScope,function(clone){$animate.enter(clone,null,currentElement||$element).done(function(response){!1===response||!angular.isDefined(autoScrollExp)||autoScrollExp&&!scope.$eval(autoScrollExp)||$anchorScroll()}),cleanupLastView()});currentElement=clone,(currentScope=current.scope=newScope).$emit("$viewContentLoaded"),currentScope.$eval(onloadExp)}else cleanupLastView()}scope.$on("$routeChangeSuccess",update),update()}}}function ngViewFillContentFactory($compile,$controller,$route){return{restrict:"ECA",priority:-400,link:function(scope,$element){var current=$route.current,locals=current.locals;$element.html(locals.$template);var link=$compile($element.contents());if(current.controller){locals.$scope=scope;var controller=$controller(current.controller,locals);current.controllerAs&&(scope[current.controllerAs]=controller),$element.data("$ngControllerController",controller),$element.children().data("$ngControllerController",controller)}scope[current.resolveAs||"$resolve"]=locals,link(scope)}}}instantiateRoute.$inject=["$injector"],ngRouteModule.provider("$routeParams",function(){this.$get=function(){return{}}}),ngRouteModule.directive("ngView",ngViewFactory),ngRouteModule.directive("ngView",ngViewFillContentFactory),ngViewFactory.$inject=["$route","$anchorScroll","$animate"],ngViewFillContentFactory.$inject=["$compile","$controller","$route"]}(window,window.angular);